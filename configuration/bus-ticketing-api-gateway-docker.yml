spring:
  ## API SECURITY WITH KEYCLOAK PROVIDER
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/bus-ticketing-dev
          jwk-set-uri: http://localhost:8080/realms/bus-ticketing/protocol/openid-connect/certs
  
  ## GATEWAY CONFIGURATIONS
  cloud:
    gateway:
      default-filters:
        - name: CircuitBreaker
          args:
            name: defaultCircuitBreaker
            fallbackUri: forward:/fallback
      routes:
        # CORE SERVICE - handles trips, users, routes, buses, cards
        - id: bus-ticketing-core-service
          uri: lb://bus-ticketing-core-service
          predicates:
            - Path=/api/core/**
          filters:
            - RewritePath=/api/core/(?<segment>.*), /api/v1/$\{segment}

        # USER SERVICE - handles user authentication and profile management
        - id: bus-ticketing-user-service
          uri: lb://bus-ticketing-user-service
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/users/(?<segment>.*), /api/v1/$\{segment}

        # BOOKING SERVICE - handles ticket reservations and bookings
        - id: bus-ticketing-booking-service
          uri: lb://bus-ticketing-booking-service
          predicates:
            - Path=/api/bookings/**
          filters:
            - RewritePath=/api/bookings/(?<segment>.*), /api/v1/$\{segment}

        # PAYMENT SERVICE - handles payment processing
        - id: bus-ticketing-payment-service
          uri: lb://bus-ticketing-payment-service
          predicates:
            - Path=/api/payments/**
          filters:
            - RewritePath=/api/payments/(?<segment>.*), /api/v1/$\{segment}

        # SERVICE REGISTRY - for debugging/monitoring only
        - id: bus-ticketing-service-registry
          uri: lb://bus-ticketing-service-registry
          predicates:
            - Path=/eureka/**
          filters:
            - SetPath=/

        # CONFIG SERVER - for configuration
        - id: bus-ticketing-config-server
          uri: lb://bus-ticketing-config-server
          predicates:
            - Path=/config/**
          filters:
            - StripPrefix=1

        # LIVE TRACKING SERVICE - handles real-time bus location updates
        - id: bus-ticketing-live-tracking-service
          uri: lb://bus-ticketing-live-tracking-service
          predicates:
            - Path=/api/tracking/**
          filters:
            - RewritePath=/api/tracking/(?<segment>.*), /api/v1/$\{segment}

        # FLEET MANAGEMENT SERVICE - handles bus fleet operations
        - id: bus-ticketing-fleet-management-service
          uri: lb://bus-ticketing-fleet-management-service
          predicates:
            - Path=/api/fleet/**
          filters:
            - RewritePath=/api/fleet/(?<segment>.*), /api/v1/$\{segment}

        # NOTIFICATION SERVICE - handles all system notifications
        - id: bus-ticketing-notification-service
          uri: lb://bus-ticketing-notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - RewritePath=/api/notifications/(?<segment>.*), /api/v1/$\{segment}

        # ANALYTICS SERVICE - handles reporting and analytics
        - id: bus-ticketing-analytics-service
          uri: lb://bus-ticketing-analytics-service
          predicates:
            - Path=/api/analytics/**
          filters:
            - RewritePath=/api/analytics/(?<segment>.*), /api/v1/$\{segment}

        # POS SERVICE - handles point-of-sale integrations
        - id: bus-ticketing-pos-service
          uri: lb://bus-ticketing-pos-service
          predicates:
            - Path=/api/pos/**
          filters:
            - RewritePath=/api/pos/(?<segment>.*), /api/v1/$\{segment}
## SECURITY BASED CONFIGURATIONS
app:
  config:
    keycloak:
      url: http://192.168.1.5:8080
      realm: javatodev-internet-banking

server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: http://192.168.1.5:8081/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
    prefer-ip-address: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
    instances:
      defaultCircuitBreaker:
        baseConfig: default
  ratelimiter:
    configs:
      default:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 0
    instances:
      # Default rate limiter for all routes
      default:
        baseConfig: default
      # More restrictive rate limiting for authentication endpoints
      auth:
        limitForPeriod: 20
        limitRefreshPeriod: 1s
      # Higher limits for read operations
      readOperations:
        limitForPeriod: 300
        limitRefreshPeriod: 1s
##ACTUATOR ENDPOINT CONFIGURATIONS
management:
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true


# spring:
#   cloud:
#     gateway:
#       discovery:
#         locator:
#           enabled: true
#       routes:
#         - id: user-service
#           uri: http://localhost:8083
#         - id: booking-service
#           uri: http://localhost:8084
#         - id: payment-service
#           uri: http://localhost:8085
#         - id: fleet-service
#           uri: http://localhost:8086
#         - id: tracking-service
#           uri: http://localhost:8087
#         - id: notification-service
#           uri: http://localhost:8088
#         - id: analytics-service
#           uri: http://localhost:8089
#         - id: pos-service
#           uri: http://localhost:8091
#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/bus-ticketing-dev}
#           jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8080/realms/bus-ticketing-dev/protocol/openid-connect/certs}

# logging:
#   level:
#     root: DEBUG
#     org.springframework: DEBUG
#     org.springframework.cloud.gateway: TRACE
#     com.bus.ticketing: DEBUG
#     org.springframework.web: DEBUG
#     org.springframework.security: DEBUG 