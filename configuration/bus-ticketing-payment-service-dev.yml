server:
  port: 8085

spring:
  application:
    name: bus-ticketing-payment-service
  datasource:
    url: postgresql://postgres:gWdPhKsfjxwNiiOxkFwPhTfWbtUKlMhB@switchback.proxy.rlwy.net:37854/railway
    username: postgres
    password: gWdPhKsfjxwNiiOxkFwPhTfWbtUKlMhB
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/bus-ticketing/protocol/openid-connect/certs
  cloud:
    config:
      enabled: false

# Actuator settings
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
    git:
      mode: full

# Eureka settings
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8081/eureka
  instance:
    prefer-ip-address: true
    ip-address: 192.168.8.105

# Logging
logging:
  level:
    com.busticketing: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.data: INFO

# Feign Client settings
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: FULL
  circuitbreaker:
    enabled: true

# Resilience4j settings
resilience4j:
  circuitbreaker:
    instances:
      coreFeignClientCB:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
  retry:
    instances:
      coreFeignClientRetry:
        maxRetryAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# App config (matching user service)
app:
  config:
    keycloak:
      server-url: http://localhost:8080
      realm: bus-ticketing
      clientId: bus-ticketing-client
      client-secret: your-client-secret

# App info
info:
  app:
    name: bus-ticketing-payment-service
    description: Payment Service for Bus Ticketing System
    version: 1.0.0

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://172.25.0.12:9411/api/v2/spans

# spring:
#   datasource:
#     url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:bus_ticketing_dev}
#   jpa:
#     hibernate:
#       ddl-auto: create-drop
#     show-sql: true
#     properties:
#       hibernate:
#         format_sql: true
#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/bus-ticketing-dev}
#           jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8080/realms/bus-ticketing-dev/protocol/openid-connect/certs}

# # Payment Gateway Test Credentials
# payment:
#   gateway:
#     test-mode: true
#     api-key: ${PAYMENT_GATEWAY_TEST_API_KEY}
#     secret-key: ${PAYMENT_GATEWAY_TEST_SECRET_KEY}

# logging:
#   level:
#     root: DEBUG
#     org.springframework: DEBUG
#     com.bus.ticketing: DEBUG
#     org.hibernate: DEBUG
#     org.hibernate.SQL: DEBUG
#     org.hibernate.type.descriptor.sql: DEBUG 