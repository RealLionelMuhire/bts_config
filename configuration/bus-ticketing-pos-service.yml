server:
  port: 8089
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain,text/css,application/javascript

spring:
  application:
    name: bus-ticketing-pos-service
  
  # Database Configuration
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  
  # Flyway Migration Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}
          jwk-set-uri: ${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
  
  # Actuator Configuration
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus
    endpoint:
      health:
        show-details: always
    health:
      circuitbreakers:
        enabled: true
      ratelimiters:
        enabled: true
  
  # Cloud Configuration
  cloud:
    config:
      enabled: true
      uri: http://bus-ticketing-config-server:8090
    discovery:
      enabled: true

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: http://bus-ticketing-service-registry:8081/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      coreService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  
  ratelimiter:
    instances:
      posDeviceLimiter:
        limitForPeriod: 20
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
      ticketValidationLimiter:
        limitForPeriod: 50
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
      cardTransactionLimiter:
        limitForPeriod: 50
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
      deviceSyncLimiter:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 1000ms
      posDeviceHeartbeatLimiter:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 200ms

# Logging Configuration
logging:
  level:
    com.bus.ticketing.pos: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method 